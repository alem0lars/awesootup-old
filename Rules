#!/usr/bin/env ruby

require 'compass'


Compass.add_project_configuration 'config.rb'


# == Compilation rules ========================================================

# Don't apply filters for the fonts
compile '/assets/fonts/*/' do
end

# Don't apply filters for the images
compile '/assets/images/*/' do
end

# Don't apply filters for the styles partials (files that begin with '_'),
# because we will not route them
compile '/assets/styles/_*/' do
end

# For each stylesheet filter it as a SCSS item
compile '/assets/styles/*/' do
  filter :sass, Compass.sass_engine_options
end

# The scripts are filtered with ERB because we could want to use some kind of
# pre-processing
compile '/assets/scripts/*/' do
  filter :erb
end

# Modules are filtered with ERB and use the 'module.html.erb' layout
compile '/markup/awesootup/modules/*/' do
  filter :erb
  layout 'module'
end

# Markups are filtered with ERB and use the 'default.html.erb' layout
compile '/markup/*/' do
  filter :erb
  layout 'default'
end

# The index page is filtered with ERB and use the 'default.html.erb' layout
compile '/markup/' do
  filter :erb
  layout 'default'
end

compile '*' do
  nil
end

# == Routing rules ============================================================

# Route for '/assets/fonts':
# Preserve the filename, the file extensions and the directory structure
route '/assets/fonts/*/' do
  item.identifier.chop + '.' + item[:extension]
end

# Route for '/assets/images':
# Preserve the filename, the file extensions and the directory structure
route '/assets/images/*/' do
  item.identifier.chop + '.' + item[:extension]
end

# Route for '/assets/styles' styles partials:
# Don't output styles partials, so return nil
route '/assets/styles/_*/' do
  nil
end

# Route for '/assets/styles' (non styles partials):
# Append .css to the filename and preserve the directory structure
route '/assets/styles/*/' do
  item.identifier.chop + '.css'
end

# Route for '/assets/scripts':
# Append .js to the filename and preserve the directory structure
route '/assets/scripts/*/' do
  item.identifier.chop.gsub(/\.erb$/, '') + '.js'
end

# Route for all files in '/markup' (except index.html)
# Append .html to the filename, make the directory hierarchy under '/markup' in
# the output root directory
route '/markup/*/' do
  identifier = item.identifier.chop

  # Compile excluding configurations
  dir_name = File.basename(File.dirname(identifier))
  if identifier =~ /#{dir_name}\/#{dir_name}_cfg$/
    nil
  else
    identifier.gsub(/^\/markup/, '/').gsub(/\.erb$/, '') + '.html'
  end
end

# Route for '/markup/index.html':
# Put 'index.html' in the root directory
route '/markup/' do
  '/index.html'
end


# == Layout rules =============================================================

# Compile the layouts using ERB
layout '*', :erb
